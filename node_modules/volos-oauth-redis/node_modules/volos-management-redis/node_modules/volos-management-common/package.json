{
  "name": "volos-management-common",
  "version": "0.9.3",
  "main": "lib/management.js",
  "license": "MIT",
  "description": "Management library for the Volos system.",
  "homepage": "https://github.com/apigee/volos",
  "keywords": [],
  "dependencies": {
    "debug": "1.0.x"
  },
  "devDependencies": {},
  "repository": {
    "type": "git",
    "url": "https://github.com/apigee/volos.git"
  },
  "readme": "# volos-management-common\n\nThis module includes management functions for volos modules including managing developers and applications.\nCurrently this is only depended upon by the OAuth modules.\n\n## Modules\n\nThis module does not do anything on its own -- it depends on an implementation which stores the cache in a particular\nplace. Current implementations are:\n\n* volos-management-apigee: Apigee backend.\n* volos-management-redis: Redis backend.\n\n## Example\n\n    var Management = require('volos-management-redis');\n    var mgmt = cm.create({}); // include any redis options that are not default\n    mgmt.createDeveloper({ firstName: 'Joe', lastName: 'Schmoe', email: 'joe@schmoe.com', userName: 'joeschmoe' }, cb);\n\n## Reference\n\n### Object structures\n\n#### Developer\n\n    developer: {\n      email (string)\n      id: (string)\n      userName: (string)\n      firstName: (string)\n      lastName: (string)\n      status: (string)\n      attributes: (hash)\n    }\n\n#### Application\n\n    application: {\n      name: (string)\n      id: (string)\n      status: (string)\n      callbackUrl: (string)\n      developerId: (string)\n      attributes: (hash)\n      credentials: [(credentials)],\n      defaultScope: (string),\n      scopes: (string) or [(string)]\n    }\n\n#### Credentials\n\n    credentials: {\n      key: (string)\n      secret: (string)\n      status: (string)\n      attributes: (object)\n    }\n\n\n### Functions\n\n#### Management.createDeveloper(developer, callback)\n\nCreate a Developer.\n\n* developer (required): Developer structure\n* callback (required): The result of the call is returned via callback: function(err, developer)\n\n#### Management.getDeveloper(uuid, callback)\n\nRetrieve a Developer.\n\n* uuid (required): The uuid of the Developer.\n* callback (required): The result of the call is returned via callback: function(err, developer)\n\n#### Management.updateDeveloper(developer, callback)\n\nUpdate a Developer.\n\n* developer (required): Developer structure\n* callback (required): The result of the call is returned via callback: function(err, developer)\n\n#### Management.deleteDeveloper(uuid, callback)\n\nDelete a Developer.\n\n* uuid (required): The uuid of the Developer.\n* callback (required): The result of the call is returned via callback: function(err)\n\n#### Management.createApp(application, callback)\n\nCreate an Application.\n\n* application (required): Application structure\n* callback (required): The result of the call is returned via callback: function(err, application)\n\n#### Management.getApp(uuid, callback)\n\nRetrieve an Application.\n\n* uuid (required): The uuid of the Application.\n* callback (required): The result of the call is returned via callback: function(err, application)\n\n#### Management.getDeveloperApp(developerEmail, applicationName, callback)\n\nRetrieve an Application given the developer's email and application name.\n\n* developerEmail (required): The developer email.\n* applicationName (required): The name of the application.\n* callback (required): The result of the call is returned via callback: function(err, application)\n\n#### Management.deleteApp(uuid, callback)\n\nDelete an Application.\n\n* uuid (required): The uuid of the Application.\n* callback (required): The result of the call is returned via callback: function(err)\n\n#### Management.updateApp(application, callback)\n\nUpdate an Application.\n\n* application (required): Application structure\n* callback (required): The result of the call is returned via callback: function(err, application)\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/apigee/volos/issues"
  },
  "_id": "volos-management-common@0.9.3",
  "_from": "volos-management-common@0.9.x"
}
