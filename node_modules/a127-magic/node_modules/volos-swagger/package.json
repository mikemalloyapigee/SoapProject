{
  "name": "volos-swagger",
  "version": "0.5.0",
  "license": "MIT",
  "description": "Middleware for bridging swagger (via swagger-tools) and volos",
  "homepage": "https://github.com/apigee/volos",
  "keywords": [
    "apigee",
    "a127",
    "swagger"
  ],
  "author": {
    "name": "Scott Ganyo",
    "email": "sganyo@apigee.com"
  },
  "main": "lib/connect-middleware.js",
  "dependencies": {
    "debug": "1.0.x",
    "underscore": "1.6.x",
    "yamljs": "0.1.x",
    "async": "0.8.x"
  },
  "devDependencies": {
    "mocha": "1.19.x",
    "should": "3.1.x",
    "express": "3.4.x",
    "swagger-tools": "",
    "volos-cache-memory": "",
    "volos-quota-memory": "",
    "volos-oauth-redis": ""
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/apigee/volos.git"
  },
  "readme": "# volos-swagger\n\nThis module adds support for driving Volos middleware functions entirely though configuration and the Apigee 127\n [Swagger Tools](https://www.npmjs.org/package/swagger-tools) swagger-metadata middleware.\n\nAll Volos modules including Cache, Quota, and OAuth may be configured and tied to Swagger operations using\n configuration similar to the code that you would use to programmatically drive the Volos middleware. \n\nThis can be included in an Apigee-127 project as simply as this:\n    \n    var a127 = require('a127-magic');\n    app.use(a127.middleware());\n\n## Configuration\n\nThe Volos Swagger Configuration is done directly in the Swagger 2.x document:\n \nThe following sections discuss examples from [this](test/support/swagger.yaml) swagger yaml file.  \n\nImportant: Be sure to include any referenced Volos modules in your package.json and run `npm install`.   \n\n### Resources\n\nThe \"x-volos-resources\" vendors extension section defines how the modules that will be referenced in the other sections \nof this file will be instantiated and configured. The basic idea is that you simply define the array of \nparameters that would have been passed in to create the Volos module had you done it programmatically.\n \nFor example, [volos-cache-memory](../cache/memory/README.md) requires a name and a hash of options. If we want to create\nand use a cache named \"memCache\" that has a time-to-live (ttl) of 1000ms, we'd do so like this: \n\n    x-volos-resources:\n      cache:\n        provider: \"volos-cache-memory\"\n        options:\n          name: \"memCache\"\n          ttl: 10000\n\nNote: The key (name) for this resource is \"cache\". This is the name that will be used later to refer to this cache, not\n\"memCache\" - which the provider's name for the cache.\n\nSimilarly, we create a [volos-quota-memory](../quota/memory/README.md) (\"quota\") and \n[volos-oauth-redis](../oauth/redis/README.md) (\"oauth2\") reference in this example: \n\n    quota:\n      provider: \"volos-quota-memory\"\n      options:\n        timeUnit: \"minute\"\n        interval: 1\n        allow: 2\n    oauth2:\n      provider: \"volos-oauth-apigee\"\n      options:\n        encryptionKey: \"This is the key to encrypt/decrypt stored credentials\"\n      \n### Paths & Operations\n\n#### Cache & Quota middleware\n\nVolos modules are applied in a Swagger path or operation with the \"x-volos-apply\" extension. In the example below, we \nhave examples of applying a cache (\"cache\") and a quota (\"quota\"). In each case, we're applying with the Volos defaults.\n\n    paths:\n      /cached:\n        x-volos-apply:\n          cache: {}\n      /quota:\n        x-volos-apply: \n          quota: {}\n\n#### OAuth authorization\n\nVolos authorization is applied in a Swagger path or operation with the \"x-volos-authorizations\" extension. In the \nexample below, we are requiring that the request is using an OAuth Token validated by the \"oauth2\" resource requiring \nthe \"scope1\" scope. (Note: Additional scopes could also be required by space-delimiting them or using an array.)\n\n    /secured:\n      x-volos-authorizations: \n        oauth2: \n          scope: \"scope1\"\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/apigee/volos/issues"
  },
  "_id": "volos-swagger@0.5.0",
  "dist": {
    "shasum": "d940d3bddff9cc868ef79fd50bbcfb15f2c0bc8d"
  },
  "_from": "volos-swagger@",
  "_resolved": "https://registry.npmjs.org/volos-swagger/-/volos-swagger-0.5.0.tgz"
}
