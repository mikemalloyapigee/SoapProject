{
  "name": "jjve",
  "version": "0.4.0",
  "description": "Render JJV errors",
  "main": "jjve.js",
  "devDependencies": {
    "istanbul": "^0.3.0",
    "jjv": "^1.0.0",
    "jscs": "^1.4.5",
    "jshint": "^2.5.1",
    "mocha": "^1.19.0",
    "should": "^4.0.4"
  },
  "scripts": {
    "test": "jshint jjve.js test && ./node_modules/.bin/jscs jjve.js test && ./node_modules/.bin/mocha --recursive"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/silas/jjve.git"
  },
  "keywords": [
    "jjv",
    "json",
    "schema",
    "jsonschema",
    "errors"
  ],
  "author": {
    "name": "Silas Sewell",
    "email": "silas@sewell.org"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/silas/jjve/issues"
  },
  "homepage": "https://github.com/silas/jjve",
  "readme": "# JJV Errors (jjve) [![Build Status](https://travis-ci.org/silas/jjve.png?branch=master)](https://travis-ci.org/silas/jjve)\n\nThis is a library to render [JJV][jjv] validation output.\n\n## Usage\n\n``` javascript\nvar jjv = require('jjv');\nvar jjve = require('jjve');\n\nvar env = jjv();\nvar je = jjve(env);\n\nvar schema = {\n  type: 'object',\n  properties: { ok: { type: 'boolean' } },\n};\n\nvar data = { ok: 1 };\n\nvar result = env.validate(schema, data);\n\nif (result) {\n  var errors = je(schema, data, result);\n  console.log(JSON.stringify(errors, null, 4));\n}\n```\n\nOutput\n\n``` json\n[\n    {\n        \"code\": \"INVALID_TYPE\",\n        \"message\": \"Invalid type: integer should be boolean\",\n        \"data\": 1,\n        \"path\": \"$.ok\"\n    }\n]\n```\n\n## License\n\nThis work is licensed under the MIT License (see the LICENSE file).\n\nError messages derived from [z-schema][z-schema] (see the NOTICE file).\n\n[jjv]: https://github.com/acornejo/jjv\n[z-schema]: https://github.com/zaggino/z-schema\n",
  "readmeFilename": "README.md",
  "_id": "jjve@0.4.0",
  "_from": "jjve@^0.4.0"
}
